<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Talks</title><link>https://speaking.moficodes.dev/</link><description>Recent content in Home on Talks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 25 Mar 2021 13:03:46 -0400</lastBuildDate><atom:link href="https://speaking.moficodes.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Channels Demystified</title><link>https://speaking.moficodes.dev/talks/go-channels-demystified/</link><pubDate>Wed, 01 Dec 2021 12:45:04 -0400</pubDate><guid>https://speaking.moficodes.dev/talks/go-channels-demystified/</guid><description>Pitch Go makes concurrency a breeze. But with concurrency comes the trouble of managing info between multiple concurrent process. Thats where channels come in. But do we know all channels has to offer? How can we make better use of this language construct? This is what this talk is about.
Description We are in the era of fast computing. Single threaded programs are often incapable of handling workloads for a modern program.</description></item><item><title>E2e Ml Platform on K8s</title><link>https://speaking.moficodes.dev/talks/e2e-ml-platform-on-k8s/</link><pubDate>Thu, 01 Apr 2021 12:33:22 -0400</pubDate><guid>https://speaking.moficodes.dev/talks/e2e-ml-platform-on-k8s/</guid><description>Pitch ML is becoming a core part of our development lifecycle. As such the DevOps days of tomorrow will need to manage these ML platforms. Kubeflow is an open source solution for ML platform. In this talk I will share how to get an E2E ML platform setup using Kubeflow and DevOps practices
Description Kubeflow is a machine learning toolkit for Kubernetes where users can develop, deploy, and manage ML workflows in a scalable and portable manner.</description></item><item><title>About</title><link>https://speaking.moficodes.dev/about/</link><pubDate>Thu, 25 Mar 2021 13:15:27 -0400</pubDate><guid>https://speaking.moficodes.dev/about/</guid><description>Mofizur Rahman (@moficodes) is a Senior Developer Advocate at Vonage. His area of interests include container orchestration and micro services. His favorite programming language these days is Go. He also tinkers with Node, Python and Java. He is also learning and teaching in the Go, Kubernetes, Docker and Microservice community. He is a strong believer of the power of open source and importance of giving back to the community. He is a self proclaimed sticker collecting addict and has collected several box full of stickers with no signs of stopping.</description></item><item><title>How We Accidentally Created Cloud on Our Cloud</title><link>https://speaking.moficodes.dev/talks/how-we-accidentally-created-cloud-on-our-cloud/</link><pubDate>Fri, 12 Feb 2021 12:45:58 -0400</pubDate><guid>https://speaking.moficodes.dev/talks/how-we-accidentally-created-cloud-on-our-cloud/</guid><description>Pitch In an effort to automate tasks for our users we ended up creating a cloud (kind of). In this talk we will describe our journey towards automation, and how we accidentally created a Cloud on our Cloud and why we chose go to do it all.
Description Part of the job of a Developer Advocate is the ability to demo or show off portions of your technology stack to possible users.</description></item><item><title>Build your First/Next REST API with Go</title><link>https://speaking.moficodes.dev/workshops/rest-api-with-go/</link><pubDate>Sun, 07 Feb 2021 11:00:24 -0500</pubDate><guid>https://speaking.moficodes.dev/workshops/rest-api-with-go/</guid><description>Pitch If you have been around a computer for long enough you probably are familiar with the term API maybe even REST API. But what are they really and why we in the Go community care about REST API? In this talk I will try to go over all you need to know to build your first or next REST API in Go.
Description Go is a language heavily used for web api building.</description></item><item><title>You Probably Dont Need K8s</title><link>https://speaking.moficodes.dev/talks/you-probably-dont-need-k8s/</link><pubDate>Mon, 11 May 2020 12:52:33 -0400</pubDate><guid>https://speaking.moficodes.dev/talks/you-probably-dont-need-k8s/</guid><description>Pitch Kubernetes is all the rage these days. You drank the cloud native Kool-aid now you got a fever and the only prescription is more Kubernetes. But is it? Let’s talk about all the reasons why you probably don’t need Kubernetes.
Description Kubernetes is a great piece of technology. It is probably the de-facto container orchestrator for most people using container orchestrators. There is a huge demand for it as well as a lot of interest from businesses to move to Kubernetes.</description></item><item><title>From App Idea to K8s</title><link>https://speaking.moficodes.dev/talks/from-app-idea-to-k8s/</link><pubDate>Fri, 27 Mar 2020 12:34:21 -0400</pubDate><guid>https://speaking.moficodes.dev/talks/from-app-idea-to-k8s/</guid><description>Pitch With Docker and k8s you can go from an idea to a production app in hours. Lets take a look how that works in practice. From writing our app to containerizing it to getting it to be available for the entire world to access. Will also look at some sane best practices along the way.
Description Developers want to build applications. So how do we get our app out there in the real world?</description></item><item><title>Kubernetes Security Jumpstart</title><link>https://speaking.moficodes.dev/talks/kubernetes-security-jumpstart/</link><pubDate>Sat, 08 Feb 2020 12:50:59 -0400</pubDate><guid>https://speaking.moficodes.dev/talks/kubernetes-security-jumpstart/</guid><description>Pitch Kubernetes helps with microservice based app problems like scaling, deployment and discovery. But k8s is not a container security tool, and it would be a big mistake to assume that it can defend your apps from security vulnerabilities. We will explore steps we can take towards k8s security.
Description Kubernetes makes it possible to run containerized application at scale. It solves many problems of microservice architecture by abstracting away things like container deployment, container-to-container communication, load balancing.</description></item><item><title>Kubernetes: The Second Week</title><link>https://speaking.moficodes.dev/workshops/k8s-second-week/</link><pubDate>Fri, 07 Feb 2020 11:50:21 -0500</pubDate><guid>https://speaking.moficodes.dev/workshops/k8s-second-week/</guid><description>Pitch If you are someone who is trying to learn how to use Kubernetes you probably already know the high level overview. There are great resources for it already. We are gonna talk about the second week stuff. The ones intro tutorials usually miss and advance tutorials gloss over.
Description Kubernetes is probably the de-facto container orchestrator for most people using container orchestrators. There is a huge demand for it as well as a lot of interest among people to learn Kubernetes.</description></item><item><title>From App Idea to K8s</title><link>https://speaking.moficodes.dev/workshops/from-app-idea-to-k8s/</link><pubDate>Fri, 07 Feb 2020 11:01:56 -0500</pubDate><guid>https://speaking.moficodes.dev/workshops/from-app-idea-to-k8s/</guid><description>Pitch With Docker and k8s you can go from an idea to a production app in hours. Lets take a look how that works in practice. From writing our app to containerizing it to getting it to be available for the entire world to access. Will also look at some sane best practices along the way.
Description Developers want to build applications. So how do we get our app out there in the real world?</description></item><item><title>Knative Serverless Computing on K8s</title><link>https://speaking.moficodes.dev/talks/knative-serverless-computing-on-k8s/</link><pubDate>Sun, 21 Jul 2019 12:50:10 -0400</pubDate><guid>https://speaking.moficodes.dev/talks/knative-serverless-computing-on-k8s/</guid><description>Pitch Wouldn’t it be nice if as developers we could just focus on our code? That is the promise of serverless. But what if we wanted to leverage our existing kubernetes service and developers? Knative focuses on building these tools and services in a way that elevates the existing Kubernetes experience.
Description Kubernetes excels at container scheduling, and offers useful primitives for automating infrastructure. But we’ve noticed that development teams often struggle when they use vanilla Kubernetes for application deployments.</description></item><item><title>Managing Kubernetes with Istio</title><link>https://speaking.moficodes.dev/talks/managing_k8s_with_istio/</link><pubDate>Mon, 25 Mar 2019 12:21:28 -0400</pubDate><guid>https://speaking.moficodes.dev/talks/managing_k8s_with_istio/</guid><description>Pitch As monolithic apps are decomposed into microservices, developers have to worry about the challenges in distributed systems like service discovery, load balancing, monitoring, dynamic routing and perhaps most important of all, compliance and security. Istio was created to handle these features.
Description Developers are moving away from large monolithic apps in favor of small, focused microservices that speed up implementation and improve resiliency. Microservices and containers changed application design and deployment patterns, but along with them brought challenges like service discovery, routing, failure handling, security and visibility to microservices.</description></item></channel></rss>