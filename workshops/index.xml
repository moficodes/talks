<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Workshops on Talks</title><link>https://speaking.moficodes.dev/workshops/</link><description>Recent content in Workshops on Talks</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 07 Feb 2021 11:00:24 -0500</lastBuildDate><atom:link href="https://speaking.moficodes.dev/workshops/index.xml" rel="self" type="application/rss+xml"/><item><title>Build your First/Next REST API with Go</title><link>https://speaking.moficodes.dev/workshops/rest-api-with-go/</link><pubDate>Sun, 07 Feb 2021 11:00:24 -0500</pubDate><guid>https://speaking.moficodes.dev/workshops/rest-api-with-go/</guid><description>&lt;h2 id="pitch">Pitch&lt;/h2>
&lt;p>If you have been around a computer for long enough you probably are familiar with the term API maybe even REST API. But what are they really and why we in the Go community care about REST API? In this talk I will try to go over all you need to know to build your first or next REST API in Go.&lt;/p>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Go is a language heavily used for web api building. What makes a good api? How can we build apis that are robust and extensible? Writing a good API is an evolving process.&lt;/p></description></item><item><title>Kubernetes: The Second Week</title><link>https://speaking.moficodes.dev/workshops/k8s-second-week/</link><pubDate>Fri, 07 Feb 2020 11:50:21 -0500</pubDate><guid>https://speaking.moficodes.dev/workshops/k8s-second-week/</guid><description>&lt;h2 id="pitch">Pitch&lt;/h2>
&lt;p>If you are someone who is trying to learn how to use Kubernetes you probably already know the high level overview. There are great resources for it already. We are gonna talk about the second week stuff. The ones intro tutorials usually miss and advance tutorials gloss over.&lt;/p>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Kubernetes is probably the de-facto container orchestrator for most people using container orchestrators. There is a huge demand for it as well as a lot of interest among people to learn Kubernetes. I like most people wanted to learn how it all worked. And donâ€™t get me wrong the docs for Kubernetes are great. The community as a whole also created many tutorials, blog posts, videos books etc. But I still find something is missing. The intro tutorials are too basic sometimes. They are great if you want to learn the architecture of Kubernetes and how it all fits together. There are some real advance use case tutorials that dive deep in one aspect of K8s. But there is missing link.&lt;/p></description></item><item><title>From App Idea to K8s</title><link>https://speaking.moficodes.dev/workshops/from-app-idea-to-k8s/</link><pubDate>Fri, 07 Feb 2020 11:01:56 -0500</pubDate><guid>https://speaking.moficodes.dev/workshops/from-app-idea-to-k8s/</guid><description>&lt;h2 id="pitch">Pitch&lt;/h2>
&lt;p>With Docker and k8s you can go from an idea to a production app in hours. Lets take a look how that works in practice. From writing our app to containerizing it to getting it to be available for the entire world to access. Will also look at some sane best practices along the way.&lt;/p>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>Developers want to build applications. So how do we get our app out there in the real world? How do we make sure our app runs everywhere like it runs on our local dev environment?&lt;/p></description></item></channel></rss>